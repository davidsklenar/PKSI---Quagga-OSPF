{"name":"Quagga OSPF","tagline":"PKS I Projekt #1","body":"#Teoretická část\r\n\r\n***\r\n\r\n### OSPF\r\n\r\nNázev znamená Open Shortest Path First a jedná se protokol používaný pro interní routování uvnitř autonomního systému (AS). Autonomním systémem může být např. infrastruktura ISP - linky po republice nebo v menším měřítku například wifi síť v nějaké lokalitě.\r\nOSPF je tzv. link-state protokol, pomocí kterého si sousední routery prostřednictvím hello paketů vyměňují informace o stavu linek, a každý z routerů v dané oblasti (area) zná celou topologii sítě. Výchozí konfigurace je hello paket jednou za 10 sekund, a pokud nepřijde žádná odezva do 40 sekund, vyprší dead interval a linka je prohlášena za mrtvou. Poté následuje přepočet a router hledá cestu jinudy, nezapomene však informovat všechny své sousedy (neighbor). Proces OSPF zjištěné informace předá démonu zebra, který již kernelu řekne novou default routu a routy přijaté od sousedů.\r\n\r\nOSPF ve zkratce:\r\n* směrovací protokol pro dynamické směrování v síti\r\n* LS (Link-State) protokol\r\n* směrovací tabulka se vytváří pomocí [Dijkstrova algoritmu](http://cs.wikipedia.org/wiki/Dijkstr%C5%AFv_algoritmus)\r\n* Router objevuje sousední routery tím, že vysílá tzv. \"Hello\" zprávy (LSA pakety)\r\n* AD = 110\r\n\r\n***\r\n\r\n### Quagga\r\nJe rourovací open-source software pro OSPF routing. Základ tvoří \r\nzebra, která je určena jako **kernel routing manager**.\r\nQuagga je softwarový směrovač, nástupce dřívějšího projektu Zebra.\r\nJe vydán pod otevřenou licencí GPL a distribuován v podobě zdrojových kódů a binárních balíčků pro vybrané systémy unixového typu.\r\nPodporuje IPv4 i IPv6 a podporuje protokoly RIP, OSPF a BGP.\r\nProgram se skládá z několika démonů.\r\nHlavní roli hraje démon zebra, který shromažďuje směrovací informace, spolupracuje s jádrem systému a upravuje jeho směrovací tabulky.\r\nOstatní démoni (ripd, ripngd, ospfd, bgpd) slouží jako rozhraní centrálního démona pro konkrétní směrovací protokoly.\r\nNevýhodou tohoto distribuovaného uspořádání je poněkud chaotická konfigurace - každý démon má vlastní konfigurační soubor a vlastní rozhraní pro interaktivní komunikaci.\r\nTo znamená, že musíme nakonfigurovat jak Zebru, tak ospfd. Problém roztříštěného ovládání řeší program vtysh (VTY shell), který řídí celou Quaggu.\r\nSpustit jej smí jen root a může pak využívat příkazy všech démonů. Vtysh může konfiguraci ukládat buď do jednoho společného konfiguračního souboru Quagga.conf, nebo do samostatných souborů pro jednotlivé démony (jejich jména jsou vždy démon.conf).\r\nImplicitní a doporučovaný je režim se samostatnými konfiguračními soubory.\r\nQuagga svým konfiguračním jazykem napodobuje směrovače Cisco Systems.\r\n\r\n***\r\n\r\n#Praktická část\r\n\r\n***\r\n\r\n### Řešení obecně\r\nSchéma zapojení:\r\n\r\n![Palma voe](http://wonderfulengineering.com/wp-content/uploads/2013/12/hd-wallpaper-desktop-1.jpeg)\r\n\r\n**Postup řešení:**\r\n\r\n1. Všem PC přiřadíme na rozhraních IP adresy dle schématu\r\n2. PC2 a PC3 nastavíme výchozí brány (PC2 ... 192.168.2.1; PC3 ... 192.168.1.1)\r\n3. PC1 bude sloužit jako router - zde stáhnout a nainstalovat Quaggu\r\n\r\n**Test funkčnosti:**\r\n\r\nProtože PC2 s PC3 leží ve 2 různých sítích, které odděluje PC1 (quagga router), otestujeme funkčnost příkazem ping např. z PC2 <-> PC3\r\n  ```\r\n  PC2$ ping 192.168.1.2\r\n  ```\r\n***\r\n\r\n### PC1: Konfigurace Quagga OSPF\r\n\r\n1. Stáhneme a nainstalujeme balíček quagga.\r\n  ```\r\n  $ apt-get install quagga\r\n  ```\r\n\r\n2. Soubor **_/etc/quagga/daemons_** otevřeme v textovém editoru (např. nano) a povolíme daemony, které chceme používat přiřazením hodnoty yes. V našem případě _zebra_ a _ospfd_.\r\n  ```\r\n  $ nano /etc/quagga/daemons\r\n  ```\r\n  ```\r\n  zebra=yes\r\n  bgpd=no\r\n  ospfd=yes\r\n  ospf6d=no\r\n  ```\r\n\r\n3. Restartujeme quaggu\r\n  ```\r\n  $ /etc/init.d/quagga restart\r\n  ```\r\n\r\n4. Vytvoříme soubory zebra.conf a ospfd.conf zkopírováním ukázkových souborů z lokace _**/usr/share/doc/quagga/examples/**_\r\n  ```\r\n  $ cp /usr/share/doc/quagga/examples/zebra.conf.sample /etc/quagga/zebra.conf\r\n  $ cp /usr/share/doc/quagga/examples/ospfd.conf.sample /etc/quagga/ospfd.conf\r\n  ```\r\n\r\n5. Změníme vlastníka a práva u všech souborů s koncovkou .conf\r\n  ```\r\n  $ chown quagga.quaggavty /etc/quagga/*.conf\r\n  $ chmod 640 /etc/quagga/*.conf\r\n  ```\r\n\r\n6. Restartujeme quaggu\r\n  ```\r\n  $ /etc/init.d/quagga restart\r\n  ```\r\n\r\n7. Zjištění otevřených portů na našem PC.\r\n  ```\r\n  $ nmap localhost\r\n  ```\r\n\r\n8. Spustíme nastavení Zebry. Výchozí heslo: zebra\r\n  ```\r\n  $ telnet localhost 2601\r\n  ```\r\n  ```\r\n  Password: zebra\r\n  Router> enable\r\n  Router# conf t\r\n  Router(config)# int eth1\r\n  Router(config-if)# ip address 192.168.2.4/24\r\n  Router(config)# exit\r\n  Router(config-if)# int eth2\r\n  Router(config-if)# ip address 192.168.1.2/24\r\n  Router(config-if)# exit\r\n  Router(config)# ip forwarding\r\n  ```\r\n\r\n9. Spustíme nastavení OSPF. Výchozí heslo: zebra\r\n  ```\r\n  $ telnet localhost 2604\r\n  ```\r\n  ```\r\n  Password: zebra\r\n  ospfd> enable\r\n  ospfd# conf t\r\n  ospfd(config)# router ospf\r\n  ospfd(config-router)# network 192.168.2.0/24 area 0\r\n  ospfd(config-router)# network 192.168.1.0/24 area 0\r\n  ```\r\n\r\n***\r\n\r\n### Help:\r\nZjištění stavu linky rozhraní:\r\n```\r\n$ mii-tool\r\n```\r\nNastavení výchozí brány:\r\n```\r\n$ route add default gw <IP_vychozi_brany>\r\n```\r\n\r\nMám nainstalovaný balíček quagga?\r\n```\r\n$ dpkg -l | grep quagga\r\n```\r\n\r\nBěží mi daemon ospfd?\r\n```\r\n$ ps -ef | grep ospf\r\n```\r\n\r\n### Zdroje:\r\n[http://openmaniak.com/quagga.php](http://openmaniak.com/quagga.php)\r\n\r\n[http://www.abclinuxu.cz/serialy/ospf-dynamicke-routovani](http://www.abclinuxu.cz/serialy/ospf-dynamicke-routovani)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}